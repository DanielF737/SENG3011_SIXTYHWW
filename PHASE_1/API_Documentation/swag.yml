swagger: "2.0"
info:
  description: "API for pulling disease outbreak reports from Global Incident Tracker\n\n**Changelog:**\n\n
    Version 1.1.0 - 4/4/20:\n
    - Added pagination field to search endpoint
    - Changed get /articles to start and end index instead of N most recent\n\n
    Version 1.0.2 - 3/4/20:\n
    - Fixed all endpoints to give locations as report.locations not report.location\n\n
    Version 1.0.1 - 24/3/20:\n
    - Fixed search endpoint to correctly return results based on key terms.\n
    - Fixed /articles{n} to correctly return reports in the correct format.\n
    - Fixed /articles{id} to correctly return reports in the correct format.\n\n
      Version 1.0.0 - 24/3/20:\n
    - First public release of finalized API. All endpoints now working correctly."
  version: "1.1.0"
  title: "SIXTYHWW - SENG3011"
  license:
    name: "Click here"
    url: 'https://www.gnu.org/licenses/gpl-3.0.txt'
paths:
  /search:
     post:
       tags:
         - "Search"
       summary: "Search query for articles"
       description: "Search Object with parameters to find Articles."
       consumes:
         - application/json
       produces:
         - application/json
       parameters:
         - name: body
           in: body
           description: "start_date - string: Must be in following format: “yyyy-MM-ddTHH:mm:ss”. (REQUIRED)\n
             end_date - string: Must be in following format: “yyyy-MM-ddTHH:mm:ss”. (REQUIRED)\n
             keyTerms - string: Comma separated list of key terms\n
             location - string: location to search. (CASE SENSITIVE)\n
             pagination - string: start index and end index separated by comma\n"
           required: true
           schema:
             $ref: '#/definitions/Search'

       responses:
         200:
             description: Success
             schema:
                 type: array
                 items:
                   $ref: '#/definitions/Article'
         400:
             description: Something failed
         405:
             description: Validation Exception
  /articles:
     post:
       tags:
         - "Articles"
       summary: "Add/Update a single Article [REQUIRES ADMIN]"
       description: "Add or Update a single article in the database"
       consumes:
         - application/json
       produces:
         - application/json
       parameters:
         - name: body
           in: body
           description: "url - string: url of article\n
           date_of_publication - string: date article was published. Must be in form \"YY-MM-DD HH-MM-SS\"\n
           headline - string: headline of article\n
           main_text - string: text of article\n
           reports - array: array of report objects\n

           \nreports:\n
           event_date - string: date article was published. Must be in form \"YY-MM-DD HH-MM-SS\"\n
           location - array of location objects\n
           diseases - array of strings: Must be in disease_list.json\n
           syndromes - array of strings: Must be in syndrome_list.json\n

           \nDiseases:\n
           country - string: country of report\n
           city - string: city of report\n
           latitude - string: latitude of city\n
           longitude - longitude of city"
           required: true
           schema:
             $ref: '#/definitions/Article2'
       security:
         - TrivialAuth: []
       responses:
         400:
             description: Invalid ID
         401:
           $ref: "#/Responses/UnauthorisedError"
         404:
             description: Article not found
         405:
             description: Validation Exception
     get:
       tags:
         - "Articles"
       summary: "Get N most recent articles in a certain range"
       description: "Fetch the N most recent Articles in the system"
       produces:
         - application/json
       parameters:
         - name: start
           in: query
           description: "start - integer: start index of articles to return. Default 0"
           type: integer
           default: 0
         - name: end
           in: query
           description: "end - integer: end index of articles to return. Default 20"
           type: integer
           default: 20

       responses:
         200:
             description: Success
             schema:
                 type: array
                 items:
                   $ref: '#/definitions/Article'
         400:
             description: something failed
  /articles/{id}:
     get:
       tags:
         - "Articles"
       summary: "Get Article by ID"
       description: "Return a single article"
       produces:
         - application/json
       parameters:
         - name: id
           in: path
           description: "ID - integer: ID of the article to fetch. Min: 0, Must be valid ID in system"
           default : 0
           required: true
           type: integer
           minimum: 0
       responses:
         200:
             description: Success
             schema:
               $ref: "#/definitions/Article"
         400:
             description: Invalid ID
         404:
             description: Article not found


     delete:
       tags:
         - "Articles"
       summary: "Deletes an Article [REQUIRES ADMIN]"
       description: "Delete an Article from the system"
       produces:
         - application/json
       parameters:
         - name: id
           in: path
           description: "id - integer: id of article to delete. Min=0, Must be valid ID in system."
           required: true
           type: integer
           minimum: 0
       security:
         - TrivialAuth: []
       responses:
         200:
             description: Success
         400:
             description: Invalid ID
         401:
           $ref: '#/Responses/UnauthorisedError'
         404:
             description: Article not found

Responses:
  UnauthorisedError:
    description: API key is missing or invalid

securityDefinitions:
  TrivialAuth:
    type: apiKey
    name: authorization
    in: header

definitions:
   Location:
     type: object
     properties:
       country:
         type: string
       city:
         type: string
       latitude:
         type: string
       longitude:
         type: string
     example:
       country: "Australia"
       city: "Sydney"
       latitude: "-33.865"
       longitude: "151.210"

   Report:
     type: object
     properties:
       event_date:
         type: string
         format: "date time"
       locations:
         type: array
         items:
           $ref: "#/definitions/Location"
       diseases:
         type: array
         items:
           type: string
       syndromes:
         type: array
         items:
           type: string
     example:
       event_date: "2020-03-20 04:41:00"
       location:
         - country: "Thailand"
           city: "Bangkok"
           latitude: "13.756"
           longitude: "100.502"
       diseases:
         - "COVID-19"
       syndromes:
         - "Influenza-like illness"



   Article:
     type: object
     properties:
       id:
         type: integer
         example: 7
       url:
         type: string
         example: "http://outbreaks.globalincidentmap.com/eventdetail.php?ID=34330"
       data_of_publication:
         type: string
         example: "2020-03-20 04:41:00"
       headline:
         type: string
         example: "THAILAND - Thailand Reports 51 New Coronavirus Infections For Total Of 322"
       main_text:
         type: string
         example: "[Reuters] THAILAND - Thailand reports 50 new coronavirus infections for total of 322 \"Thailand reported 50 new coronavirus infections, taking its tally to 322, a health        official said on Friday, with the majority located in Bangkok, the capital..."
       reports:
         type: array
         items:
           $ref: "#/definitions/Report"
   Article2:
     type: object
     properties:
       url:
         type: string
         example: "http://outbreaks.globalincidentmap.com/eventdetail.php?ID=34330"
       data_of_publication:
         type: string
         example: "2020-03-20 04:41:00"
       headline:
         type: string
         example: "THAILAND - Thailand Reports 51 New Coronavirus Infections For Total Of 322"
       main_text:
         type: string
         example: "[Reuters] THAILAND - Thailand reports 50 new coronavirus infections for total of 322 \"Thailand reported 50 new coronavirus infections, taking its tally to 322, a health        official said on Friday, with the majority located in Bangkok, the capital..."
       reports:
         type: array
         items:
           $ref: "#/definitions/Report"

   Search:
     type: object
     properties:
       start_date:
         type: string
         format: "date time"
         required: true
       end_date:
         type: string
         format: "date time"
         required: true
       keyTerms:
         type: array
         items:
           type: string
       location:
         type: string
       pagination:
         type: string
     example:
       start_date: "2015-10-01T08:45:10"
       end_date: "2020-11-01T19:37:12"
       keyTerms: "covid"
       location: "Paris"
       pagination: "0,5"

